// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id_cliente      Int        @id @default(autoincrement())
  nome_completo   String     @db.VarChar(150)
  cpf             String     @unique @db.Char(11)
  celular         String     @db.VarChar(15)
  email           String     @unique @db.VarChar(100)
  data_nascimento DateTime
  enderecos       Endereco[]
  compras         Compra[]
}

model Endereco {
  id_endereco  Int      @id @default(autoincrement())
  id_cliente   Int
  rua          String   @db.VarChar(150)
  numero       String   @db.VarChar(10)
  complemento  String?  @db.VarChar(50)
  cidade       String   @db.VarChar(100)
  estado       String   @db.Char(2)
  cep          String   @db.Char(8)

  cliente      Cliente  @relation(fields: [id_cliente], references: [id_cliente])
  compras      Compra[]
}

model Categoria {
  id_categoria    Int            @id @default(autoincrement())
  nome_categoria  String         @db.VarChar(100)
  subcategorias   SubCategoria[]
}

model SubCategoria {
  id_subcategoria   Int        @id @default(autoincrement())
  id_categoria      Int
  nome_subcategoria String     @db.VarChar(100)

  categoria         Categoria  @relation(fields: [id_categoria], references: [id_categoria])
  produtos          Produto[]
}

model Produto {
  id_produto       Int          @id @default(autoincrement())
  id_subcategoria  Int
  modelo           String       @db.VarChar(100)
  fabricante       String       @db.VarChar(100)
  preco_base       Decimal      @db.Decimal(10, 2)
  quantidade       Int

  subcategoria     SubCategoria @relation(fields: [id_subcategoria], references: [id_subcategoria])
  numerosSerie     NumeroSerie[]
  itensCompra      ItensCompra[]
}

model NumeroSerie {
  id_numserie   Int      @id @default(autoincrement())
  id_produto    Int
  numero_serie  String   @unique @db.VarChar(100)

  produto       Produto  @relation(fields: [id_produto], references: [id_produto])
}

model Compra {
  id_compra        Int          @id @default(autoincrement())
  id_cliente       Int
  id_endereco      Int
  data_hora        DateTime
  desconto         Decimal?     @default(0.00) @db.Decimal(5,2)
  forma_pagamento  String       @db.VarChar(50)
  total            Decimal      @db.Decimal(10,2)

  cliente          Cliente      @relation(fields: [id_cliente], references: [id_cliente])
  endereco         Endereco     @relation(fields: [id_endereco], references: [id_endereco])
  itens            ItensCompra[]
}

model ItensCompra {
  id_compra      Int
  id_produto     Int
  quantidade     Int
  preco_unitario Decimal @db.Decimal(10,2)

  compra         Compra   @relation(fields: [id_compra], references: [id_compra])
  produto        Produto  @relation(fields: [id_produto], references: [id_produto])

  @@id([id_compra, id_produto])
}