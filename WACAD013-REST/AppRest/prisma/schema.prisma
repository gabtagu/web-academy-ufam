// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(uuid()) @db.Char(36)
  name String @unique @db.VarChar(100)
  price Decimal @db.Decimal(10,2)
  stockQuantity Int @db.Int()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PurchaseItem PurchaseItem[]

  @@index([name])
}

model User {
 id String @id @default(uuid()) @db.Char(36)
 name String @db.VarChar(100)
 email String @unique @db.VarChar(100)
 password String @db.Char(60)
 userTypeId String @db.Char(36)
 userType UserType @relation(fields: [userTypeId], references: [id])
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 Purchase Purchase[]
}
model UserType {
 id String @id @default(uuid()) @db.Char(36)
 label String @db.VarChar(10)

 User User[]
}
model Purchase{
  id String @id @default(uuid()) @db.Char(36)
  userId String @db.Char(36) 
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  PurchaseItem PurchaseItem[]
  
}

model PurchaseItem {
  id String @id @default(uuid()) @db.Char(36)
  purchaseId String @db.Char(36)
  purchase Purchase @relation(fields: [purchaseId], references: [id])
  productId String @db.Char(36)
  product Product @relation(fields: [productId], references: [id])
  quantity Int @db.Int()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}